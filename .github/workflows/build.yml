name: Publish Docker image

on:
  workflow_dispatch:
    inputs:
      update_latest:
        description: 'Update the "latest" tag (only applies to stable versions)'
        required: false
        default: true
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: "pip"
    
    - name: Safety Version
      run: |
        pip install packaging
        echo "SAFETY_VERSION=$(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml", "rb"))["project"]["version"])')" >> $GITHUB_ENV

    - name: Extract Major and Minor Version
      run: |
        python scripts/extract_version.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:v0.10.6

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Check for Beta Version
      id: beta_check
      run: |
        if [[ ${{ env.SAFETY_VERSION }} =~ .*b[0-9]+$ ]]; then
          echo "is_beta=true" >> $GITHUB_ENV
        else
          echo "is_beta=false" >> $GITHUB_ENV
        fi

    - name: Determine Latest Tag Update
      run: |
        if [[ "${{ env.is_beta }}" == "true" ]]; then
          echo "update_latest=false" >> $GITHUB_ENV
        else
          echo "update_latest=${{ github.event.inputs.update_latest }}" >> $GITHUB_ENV
        fi

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/pyupio/safety
        tags: |
          type=raw,value=${{ env.SAFETY_VERSION }},suffix=-{{ sha }}
          type=raw,value=${{ env.SAFETY_VERSION }}
          ${{ env.is_beta != 'true' && format('type=raw,value={0}.{1}', env.SAFETY_MAJOR_VERSION, env.SAFETY_MINOR_VERSION) || '' }}
          ${{ env.is_beta != 'true' && format('type=raw,value={0}', env.SAFETY_MAJOR_VERSION) || '' }}
          ${{ env.update_latest == 'true' && 'type=raw,value=latest' || '' }}
          ${{ env.is_beta == 'true' && 'type=raw,value=beta' || '' }}
        labels: |
          org.opencontainers.image.title=Safety CLI
          org.opencontainers.image.description=Safety CLI is a Python dependency vulnerability scanner that enhances software supply chain security at every stage of development.
          org.opencontainers.image.vendor=Safety Cybersecurity
          org.opencontainers.image.licenses=MIT

    - name: Build and Push image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: SAFETY_VERSION=${{ env.SAFETY_VERSION }} 
